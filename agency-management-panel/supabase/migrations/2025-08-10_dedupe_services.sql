-- Deduplicate services and service_overall_stats and add uniqueness guards
-- Safe to run multiple times

begin;

-- 1) Ensure tables exist (no-op if already present)
create table if not exists public.services (
  id bigint generated by default as identity primary key,
  title text not null,
  description text not null,
  icon text,
  color text,
  stats_projects int,
  stats_avg_time text,
  stats_satisfaction text,
  features text[],
  price_range text,
  active boolean default true,
  created_at timestamptz default now()
);

create table if not exists public.service_overall_stats (
  id bigint generated by default as identity primary key,
  label text not null,
  value text not null,
  change text,
  icon text,
  created_at timestamptz default now()
);

-- 2) Remove duplicate rows in services (keep lowest id per title, case-insensitive)
with ranked as (
  select id,
         row_number() over (partition by lower(title) order by id) as rn
  from public.services
)
delete from public.services s
using ranked r
where s.id = r.id and r.rn > 1;

-- 3) Guard against future duplicates in services
create unique index if not exists services_title_unique_idx on public.services (lower(title));

-- 4) Remove duplicate rows in service_overall_stats (keep lowest id per label)
with ranked as (
  select id,
         row_number() over (partition by lower(label) order by id) as rn
  from public.service_overall_stats
)
delete from public.service_overall_stats s
using ranked r
where s.id = r.id and r.rn > 1;

-- 5) Guard against future duplicates in service_overall_stats
create unique index if not exists service_overall_stats_label_unique_idx on public.service_overall_stats (lower(label));

commit;
